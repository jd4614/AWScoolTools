AWSTemplateFormatVersion: 2010-09-09

Resources:
  VPC:
    Type: 'AWS::EC2::VPC'
    Properties:
      CidrBlock: 10.1.0.0/16
      EnableDnsSupport: true
      EnableDnsHostnames: true
      Tags:
        - Key: Name
          Value: !Sub '${AWS::StackName}-VPC'
 
  IGW:
    Type: 'AWS::EC2::InternetGateway'
    Properties:
      Tags:
        - Key: Name
          Value: !Sub '${AWS::StackName}-IGW'
  
  attachGateway:
    Type: 'AWS::EC2::VPCGatewayAttachment'
    Properties:
      VpcId: !Ref VPC
      InternetGatewayId: !Ref IGW
  
  publicSubnetA:
    Type: 'AWS::EC2::Subnet'
    Properties:
      AvailabilityZone: !Select 
        - 0
        - !GetAZs ''
      VpcId: !Ref VPC
      CidrBlock: 10.1.1.0/24
      MapPublicIpOnLaunch: true
      Tags:
        - Key: Name
          Value: !Sub '${AWS::StackName}-Public-A'
  
  publicRouteTable:
    Type: 'AWS::EC2::RouteTable'
    Properties:
      VpcId: !Ref VPC
      Tags:
        - Key: Name
          Value: !Sub '${AWS::StackName}-PubRouteTable'
  
  routeTableAssocPubA:
    Type: 'AWS::EC2::SubnetRouteTableAssociation'
    Properties:
      SubnetId: !Ref publicSubnetA
      RouteTableId: !Ref publicRouteTable
  
  publicRoute1:
    Type: 'AWS::EC2::Route'
    Properties:
      RouteTableId: !Ref publicRouteTable
      DestinationCidrBlock: 0.0.0.0/0
      GatewayId: !Ref IGW
  
  EIPa:
    DependsOn: attachGateway
    Type: 'AWS::EC2::EIP'
    Properties:
      Domain: !Ref VPC
  
  instanceSecurityGroup:
    Type: 'AWS::EC2::SecurityGroup'
    Properties:
      GroupDescription: Allow http to client host
      GroupName: httpAllowInOut
      VpcId: !Ref VPC
      SecurityGroupIngress:
        - IpProtocol: tcp
          FromPort: 80
          ToPort: 80
          CidrIp: 0.0.0.0/0
        - IpProtocol: tcp
          FromPort: 443
          ToPort: 443
          CidrIp: 0.0.0.0/0
        - IpProtocol: tcp
          FromPort: 22
          ToPort: 22
          CidrIp: 0.0.0.0/0
      SecurityGroupEgress:
        - IpProtocol: tcp
          FromPort: 80
          ToPort: 80
          CidrIp: 0.0.0.0/0
        - IpProtocol: tcp
          FromPort: 443
          ToPort: 443
          CidrIp: 0.0.0.0/0
        - IpProtocol: tcp
          FromPort: 22
          ToPort: 22
          CidrIp: 0.0.0.0/0

  RootInstanceProfile:
    Type: AWS::IAM::InstanceProfile
    Properties:
      Path: /
      Roles:
        - !Ref S3WritableRole
  S3WritableRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Principal:
              Service: ec2.amazonaws.com
            Action: sts:AssumeRole
      Path: /
  RolePolicies:
    Type: AWS::IAM::Policy
    DependsOn:
      - targetGroupMember0
    Properties:
      PolicyName: targetGroupMember0InstancePolicy
      PolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Action: 's3:*'
            Resource: '*'
      Roles:
        - !Ref S3WritableRole

  s3Bucket:
    Type: AWS::S3::Bucket
    Properties: 
      AccessControl: Private
      BucketName: !Sub '${AWS::AccountId}-bucket0987'
      
      Tags:
        - Key: Name
          Value: !Sub '${AWS::AccountId}-bucket0987'
  
  targetGroupMember0:
    Type: 'AWS::EC2::Instance'
    Properties:
      AvailabilityZone: !Select 
        - 0
        - !GetAZs ''
      KeyName: classDemos
      IamInstanceProfile: !Ref RootInstanceProfile
      ImageId: >-
        resolve:ssm:/aws/service/ami-amazon-linux-latest/amzn2-ami-hvm-x86_64-gp2
      InstanceType: t2.micro
      SecurityGroupIds:
        - !GetAtt instanceSecurityGroup.GroupId
      SubnetId: !Ref publicSubnetA
      UserData:
        Fn::Base64:
          !Sub |
            #!/bin/bash -xe
            exec > >(tee /var/log/user-data.log|logger -t user-data -s 2>/dev/console) 2>&1
            yum update -y
            amazon-linux-extras install -y lamp-mariadb10.2-php7.2 php7.2
            yum install -y httpd mariadb-server
            cat <<EOF > /var/www/html/index.html
            <html>
            <body>
            <p>Hostname is:           $(curl 169.254.169.254/latest/meta-data/public-hostname)</p>
            <p>IP Address is:         $(curl 169.254.169.254/latest/meta-data/public-ipv4)</p>
            <p>Availability Zone is:  $(curl 169.254.169.254/latest/meta-data/placement/availability-zone)</p>
            </body>
            </html>
            EOF
            systemctl start httpd
            systemctl enable httpd
            usermod -a -G apache ec2-user
            chown -R ec2-user:apache /var/www
            chmod 2775 /var/www
            find /var/www -type d -exec chmod 2775 {} \;
            find /var/www -type f -exec chmod 0664 {} \;
            echo "<?php phpinfo(); ?>" > /var/www/html/phpinfo.php 
            curl --output /var/www/html/awsLogo1.png https://d0.awsstatic.com/logos/powered-by-aws.png
            curl --output /var/www/html/awsTandCLogo1.png https://d1.awsstatic.com/training-and-certification/TC_logo_RGB_REV.3e0c1d22075444c502f7f926d0d07d1efbc751a3.png
            curl --output /var/www/html/vintageCloudPainting.jpg https://www.publicdomainpictures.net/pictures/270000/velka/clouds-vintage-painting-1532929117AFf.jpg
            curl --output /var/www/html/goatPicture.jpg https://cdn.stocksnap.io/img-thumbs/960w/animal-goat_0QJJYBAVZ1.jpg
            aws s3 cp /var/www/html/ s3://${s3Bucket}/ --recursive --exclude "*" --include "*.png" --include "*.jpg"
            yum install -y php     
      Tags:
        - Key: Name
          Value: !Sub '${AWS::StackName}-targetGroupMember0'